version: "3.9"

services:
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    env_file:
      - ./pgadmin/.env
    ports:
      - "8888:80"
    depends_on:
      - keycloak-psql

  mq:
    image: rabbitmq:3.12.10-management
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - mq-data:/data

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - users-static:/home/app/users_static
    depends_on:
      users:
        condition: service_started

  keycloak-psql:
    image: postgres:13
    restart: always
    env_file:
      - ./keycloak/.env
    volumes:
      - keycloak-psql-data:/var/lib/postgresql/data

  keycloak:
    env_file:
      - ./keycloak/.env
    image: quay.io/keycloak/keycloak
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-psql

  users-psql:
    image: postgres:13
    env_file:
      - ./users/users/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - users-psql-data:/var/lib/postgresql/data

  users:
    build:
      context: ./users
    command: gunicorn users.wsgi:application --bind=0.0.0.0:8000 --reload
    expose:
      - 8000
    volumes:
      - ./users:/app
      - users-static:/app/users_static
    depends_on:
      users-psql:
        condition: service_healthy

  email-psql:
    image: postgres:13
    env_file:
      - ./email/email_service/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - email-psql-data:/var/lib/postgresql/data

  email:
    build:
      context: ./email
    command: gunicorn email_service.wsgi:application --bind=0.0.0.0:8001 --reload
    expose:
      - 8001
    volumes:
      - ./email:/app

volumes:
  keycloak-psql-data:
  users-psql-data:
  email-psql-data:
  mq-data:
  users-static: